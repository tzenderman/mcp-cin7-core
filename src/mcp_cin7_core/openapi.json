{
  "openapi": "3.1.0",
  "info": { "title": "mcp-cin7-core", "version": "0.1.0" },
  "servers": [
    { "url": "https://mcp-cin7-core.onrender.com", "description": "Render prod" }
  ],
  "components": {
    "securitySchemes": {
      "apiKeyAuth": { "type": "apiKey", "in": "header", "name": "Authorization", "description": "Bearer <token>" }
    },
    "schemas": {
      "HealthResponse": {
        "type": "object",
        "properties": { "ok": { "type": "boolean" } },
        "required": ["ok"]
      },
      "MeResponse": {
        "type": "object",
        "properties": {
          "AccountID": { "type": "string" },
          "Company": { "type": "string" }
        },
        "additionalProperties": true
      },
      "ProductsResponse": {
        "type": "object",
        "properties": {
          "Products": { "type": "array", "items": { "type": "object", "additionalProperties": true } },
          "result": { "type": "array", "items": { "type": "object", "additionalProperties": true } }
        },
        "additionalProperties": true
      },
      "ProductResponse": {
        "type": "object",
        "properties": { "result": { "type": "object", "additionalProperties": true } },
        "additionalProperties": true
      },
      "SuppliersResponse": {
        "type": "object",
        "properties": {
          "Suppliers": { "type": "array", "items": { "type": "object", "additionalProperties": true } },
          "result": { "type": "array", "items": { "type": "object", "additionalProperties": true } }
        },
        "additionalProperties": true
      },
      "SalesResponse": {
        "type": "object",
        "properties": {
          "SaleList": { "type": "array", "items": { "type": "object", "additionalProperties": true } },
          "result": { "type": "array", "items": { "type": "object", "additionalProperties": true } }
        },
        "additionalProperties": true
      },
      "ProductPayload": {
        "type": "object",
        "description": "Product payload for create/update. For updates (PUT), ID is required and must match the exact type from the template. For creates (POST), omit ID or set to 0.",
        "properties": { 
          "ID": { "type": ["string", "integer"], "description": "Product ID - can be UUID string or integer depending on Cin7 response" },
          "SKU": { "type": "string" }, 
          "Name": { "type": "string" }
        },
        "required": ["SKU", "Name"],
        "additionalProperties": true
      },
      "SupplierPayload": {
        "type": "object",
        "properties": { "Name": { "type": "string" } },
        "required": ["Name"],
        "additionalProperties": true
      },
      "ErrorResponse": {
        "type": "object",
        "properties": { "error": { "type": "string" } },
        "required": ["error"]
      },
      "ProductTemplate": {
        "type": "object",
        "properties": {
          "ID": { "type": ["string", "integer"], "description": "Product ID - preserve exact value when updating" },
          "SKU": { "type": "string" },
          "Name": { "type": "string" },
          "PriceTier1": { "type": ["number", "null"] },
          "PurchasePrice": { "type": ["number", "null"] }
        },
        "additionalProperties": true
      },
      "SupplierTemplate": {
        "type": "object",
        "properties": {
          "ID": { "type": "string" },
          "Name": { "type": "string" },
          "SupplierAddress": { "type": "array", "items": { "type": "object", "additionalProperties": true } }
        },
        "additionalProperties": true
      },
      "SupplierObject": {
        "type": "object",
        "properties": {
          "ID": { "type": "string" },
          "Name": { "type": "string" }
        },
        "additionalProperties": true
      }
    }
  },
  "security": [{ "apiKeyAuth": [] }],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health",
        "operationId": "health_get",
        "responses": {
          "200": { "description": "OK", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HealthResponse" } } } }
        }
      }
    },
    "/me": {
      "get": {
        "summary": "Me",
        "operationId": "me_get",
        "responses": {
          "200": { "description": "Account/user info", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MeResponse" } } } }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "List products",
        "operationId": "products_list",
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer", "minimum": 1 } },
          { "name": "limit", "in": "query", "schema": { "type": "integer", "minimum": 1 } },
          { "name": "name", "in": "query", "schema": { "type": "string" } },
          { "name": "sku", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Products", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProductsResponse" } } } }
        }
      }
    },
    "/product": {
      "get": {
        "summary": "Get product",
        "operationId": "product_get",
        "parameters": [
          { "name": "product_id", "in": "query", "schema": { "type": "integer" } },
          { "name": "sku", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Product", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProductResponse" } } } }
        }
      },
      "post": {
        "summary": "Create product",
        "operationId": "product_create",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProductPayload" } } } },
        "responses": {
          "200": { "description": "Created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProductResponse" } } } }
        }
      },
      "put": {
        "summary": "Update product",
        "operationId": "product_update",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProductPayload" } } } },
        "responses": {
          "200": { "description": "Updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProductResponse" } } } }
        }
      }
    },
    "/product/template": {
      "get": {
        "summary": "Product template",
        "operationId": "product_template_get",
        "parameters": [
          { "name": "product_id", "in": "query", "schema": { "type": "integer" } },
          { "name": "sku", "in": "query", "schema": { "type": "string" } },
          { "name": "include_defaults", "in": "query", "schema": { "type": "boolean" }, "description": "Include default-valued fields" }
        ],
        "responses": {
          "200": { "description": "Template", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ProductTemplate" } } } }
        }
      }
    },
    "/suppliers": {
      "get": {
        "summary": "List suppliers",
        "operationId": "suppliers_list",
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer", "minimum": 1 } },
          { "name": "limit", "in": "query", "schema": { "type": "integer", "minimum": 1 } },
          { "name": "name", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Suppliers", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SuppliersResponse" } } } }
        }
      }
    },
    "/supplier": {
      "get": {
        "summary": "Get supplier",
        "operationId": "supplier_get",
        "parameters": [
          { "name": "supplier_id", "in": "query", "schema": { "type": "string" } },
          { "name": "name", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Supplier", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SupplierObject" } } } }
        }
      },
      "post": {
        "summary": "Create supplier",
        "operationId": "supplier_create",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SupplierPayload" } } } },
        "responses": {
          "200": { "description": "Created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SupplierObject" } } } }
        }
      },
      "put": {
        "summary": "Update supplier",
        "operationId": "supplier_update",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SupplierPayload" } } } },
        "responses": {
          "200": { "description": "Updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SupplierObject" } } } }
        }
      }
    },
    "/supplier/template": {
      "get": {
        "summary": "Supplier template",
        "operationId": "supplier_template_get",
        "parameters": [
          { "name": "supplier_id", "in": "query", "schema": { "type": "string" } },
          { "name": "name", "in": "query", "schema": { "type": "string" } },
          { "name": "include_defaults", "in": "query", "schema": { "type": "boolean" }, "description": "Include default-valued fields" }
        ],
        "responses": {
          "200": { "description": "Template", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SupplierTemplate" } } } }
        }
      }
    },
    "/sales": {
      "get": {
        "summary": "List sales",
        "operationId": "sales_list",
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer", "minimum": 1 } },
          { "name": "limit", "in": "query", "schema": { "type": "integer", "minimum": 1 } },
          { "name": "search", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Sales", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SalesResponse" } } } }
        }
      }
    }
  },
  "x-mcp-tools": {
    "cin7_status": { "summary": "Health check", "rest": { "method": "GET", "path": "/health" } },
    "cin7_me": { "summary": "Account info", "rest": { "method": "GET", "path": "/me" } },
    "cin7_products": {
      "summary": "List products",
      "rest": { "method": "GET", "path": "/products" },
      "params": { "page": "integer", "limit": "integer", "name": "string", "sku": "string" }
    },
    "cin7_get_product": {
      "summary": "Get product by ID or SKU",
      "rest": { "method": "GET", "path": "/product" },
      "params": { "product_id": "integer", "sku": "string" }
    },
    "cin7_product_template": {
      "summary": "Get product template (optionally seeded from an existing product)",
      "description": "IMPORTANT: Always call this endpoint BEFORE updating a product. It returns the complete current product object that you must modify and send to cin7_update_product. When updating, provide product_id or sku to get the existing product as a template.",
      "rest": { "method": "GET", "path": "/product/template" },
      "params": { "product_id": "integer", "sku": "string", "include_defaults": "boolean" }
    },
    "cin7_create_product": {
      "summary": "Create product",
      "rest": { "method": "POST", "path": "/product" },
      "payload": { "required": ["SKU", "Name"], "properties": { "SKU": "string", "Name": "string" } },
      "examples": {
        "create_minimal": {
          "request": { "method": "POST", "path": "/product", "body": { "SKU": "SKU-123", "Name": "Widget" } }
        }
      }
    },
    "cin7_update_product": {
      "summary": "Update product",
      "description": "REQUIRED WORKFLOW for updating products: 1) Call cin7_product_template with product_id or sku to fetch the complete current product object. 2) Take the ENTIRE response from step 1 and modify ONLY the specific fields you want to update (e.g., PriceTier1). 3) Send the COMPLETE modified object as the payload to this endpoint. The Cin7 API requires the full product object, not just the changed fields.",
      "rest": { "method": "PUT", "path": "/product" },
      "payload": { 
        "required": ["ID"], 
        "properties": { 
          "ID": "string or integer (use exact value from template response)",
          "SKU": "string",
          "Name": "string",
          "PriceTier1": "number", 
          "PurchasePrice": "number",
          "Category": "string",
          "Brand": "string",
          "Type": "string",
          "UOM": "string",
          "Status": "string"
        },
        "note": "You MUST include ALL fields from the cin7_product_template response, not just the ones being changed. Send the complete product object."
      },
      "examples": {
        "correct_update_workflow": {
          "description": "Correct workflow to update a product price",
          "steps": [
            { 
              "step": 1,
              "action": "Fetch current product",
              "method": "GET", 
              "path": "/product/template", 
              "query": { "sku": "JPAS400" },
              "response_example": { 
                "ID": "bf819311-a7b6-4eb8-bf8f-33744650bdb8",
                "SKU": "JPAS400",
                "Name": "Jean Paul Student Alto Saxophone brass",
                "PriceTier1": 599.99,
                "Category": "Saxophones",
                "Brand": "Jean Paul",
                "Type": "Stock",
                "UOM": "Item",
                "Status": "Active",
                "...": "all other fields from Cin7"
              }
            },
            { 
              "step": 2,
              "action": "Modify the price in the response object",
              "note": "Change PriceTier1 from 599.99 to 679.99 in the complete object from step 1"
            },
            {
              "step": 3,
              "action": "Send the complete modified object",
              "method": "PUT", 
              "path": "/product", 
              "body_example": {
                "ID": "bf819311-a7b6-4eb8-bf8f-33744650bdb8",
                "SKU": "JPAS400",
                "Name": "Jean Paul Student Alto Saxophone brass",
                "PriceTier1": 679.99,
                "Category": "Saxophones",
                "Brand": "Jean Paul",
                "Type": "Stock",
                "UOM": "Item",
                "Status": "Active",
                "...": "all other fields unchanged from step 1"
              }
            }
          ]
        },
        "wrong_approach": {
          "description": "INCORRECT - Do NOT do this",
          "why": "Sending only changed fields will cause a 502 Bad Gateway error",
          "wrong_request": { 
            "method": "PUT", 
            "path": "/product", 
            "body": { "ID": "bf819311-a7b6-4eb8-bf8f-33744650bdb8", "PriceTier1": 679.99 }
          }
        }
      }
    },
    "cin7_suppliers": {
      "summary": "List suppliers",
      "rest": { "method": "GET", "path": "/suppliers" },
      "params": { "page": "integer", "limit": "integer", "name": "string" }
    },
    "cin7_get_supplier": {
      "summary": "Get supplier by ID or name",
      "rest": { "method": "GET", "path": "/supplier" },
      "params": { "supplier_id": "string", "name": "string" }
    },
    "cin7_supplier_template": {
      "summary": "Get supplier template (optionally seeded from an existing supplier)",
      "rest": { "method": "GET", "path": "/supplier/template" },
      "params": { "supplier_id": "string", "name": "string", "include_defaults": "boolean" }
    },
    "cin7_create_supplier": {
      "summary": "Create supplier",
      "rest": { "method": "POST", "path": "/supplier" },
      "payload": { "required": ["Name"], "properties": { "Name": "string" } },
      "examples": {
        "create_minimal": {
          "request": { "method": "POST", "path": "/supplier", "body": { "Name": "Acme Co" } }
        }
      }
    },
    "cin7_update_supplier": {
      "summary": "Update supplier",
      "rest": { "method": "PUT", "path": "/supplier" },
      "payload": { "required": ["ID"], "properties": { "ID": "string", "Name": "string" } }
    },
    "cin7_sales": {
      "summary": "List sales",
      "rest": { "method": "GET", "path": "/sales" },
      "params": { "page": "integer", "limit": "integer", "search": "string" }
    },
    "cin7_products_snapshot_start": {
      "summary": "Start products snapshot",
      "rest": { "method": "POST", "path": "/products/snapshot/start" },
      "payload": { "properties": { "page": "integer", "limit": "integer", "name": "string", "sku": "string", "fields": "string[]" } },
      "examples": {
        "start": {
          "request": { "method": "POST", "path": "/products/snapshot/start", "body": { "page": 1, "limit": 100, "fields": ["SKU","Name","PriceTier1"] } }
        }
      }
    },
    "cin7_products_snapshot_chunk": {
      "summary": "Get products snapshot chunk",
      "rest": { "method": "GET", "path": "/products/snapshot/chunk" },
      "params": { "snapshot_id": "string", "offset": "integer", "limit": "integer" }
    },
    "cin7_products_snapshot_status": {
      "summary": "Products snapshot status",
      "rest": { "method": "GET", "path": "/products/snapshot/status" },
      "params": { "snapshot_id": "string" }
    },
    "cin7_products_snapshot_close": {
      "summary": "Close products snapshot",
      "rest": { "method": "POST", "path": "/products/snapshot/close" },
      "payload": { "required": ["snapshot_id"], "properties": { "snapshot_id": "string" } }
    }
  }
}